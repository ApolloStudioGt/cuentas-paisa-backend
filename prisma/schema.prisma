// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  email     String   @unique
  fullName  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sales Sale[]
  @@index([isActive])
}

model Customer {
  id        String   @id @default(uuid())
  fullName  String
  nit       String   @unique
  email     String
  phone     String
  customerSales Sale[]
  customerAccountCutOff AccountCutOff[]
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([isActive])
}

model Sale {
  id          String   @id @default(uuid())
  description String 
  amount      Float
  createBy  User     @relation(fields: [userId], references: [id])
  userId    String
  customer  Customer     @relation(fields: [customerId], references: [id])
  customerId    String
  saleType  SaleType     @relation(fields: [saleTypeId], references: [id])
  saleTypeId    String

  salePayments Payment[]
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([isActive])
}

model Payment{
  id          String   @id @default(uuid())
  description String 
  amount      Float
  sale  Sale?     @relation(fields: [salesId], references: [id])
  salesId    String? 
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([isActive])
}

model AccountCutOff{
  id          String   @id @default(uuid())
  description String 
  amount      Float
  customer  Customer     @relation(fields: [customerId], references: [id])
  customerId    String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([isActive])
}

model SaleType{
  id          String   @id @default(uuid())
  description String  @unique
  Sale  Sale[] 
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([isActive])
}